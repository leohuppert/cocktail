{% extends 'base.html.twig' %}

{% block body %}
    <div id="app">
        <h1>Liste des recettes</h1>

        <div class="form-group">
            <input type="text" class="form-control" placeholder="Rechercher une recette..." v-model="search">
        </div>


        <div class="wrapper" id="list" style="display: none;">
            <div class="cocktail" v-for="recipe in filteredList">
                <a v-bind:href="recipe.link" v-bind:title="recipe.title">
                    <img v-bind:src="recipe.picture">
                    ${ recipe.shortTitle }
                </a>
            </div>
        </div>
    </div>

{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('assets/css/cocktail.css') }}">
{% endblock %}

{% block javascripts %}

    {{ parent() }}
    <script src="{{ asset('assets/js/includes_polyfill.js') }}"></script>
    <script src="{{ asset('assets/js/vue.js') }}"></script>
    <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>

    <script>

        // Activation des tooltips Bootstrap
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        });

        // ES5
        function Recipe(id, title, picture) {
            this.id = id;
            this.title = title;
            this.picture = '{{ asset('assets/pictures/') }}' + picture;
            this.link = Routing.generate('recipe_show', { id: this.id });
            this.shortTitle = this.title.length > 20 ? this.title.substr(0, 20) + '...' : this.title;
        }

        // let recipes = [];
        var recipes = [];

        // ES5
        {% for recipe in recipes %}
            recipes.push(new Recipe({{ recipe.id }}, "{{ recipe.name | raw }}", "{{ recipe.picture }}"));
        {% endfor %}

        // ES5
        'use strict';

        var app = new Vue({
            delimiters: ['${', '}'],
            el: '#app',
            data: {
                search: '',
                recipeList: recipes,
            },
            computed: {
                filteredList : function filteredList() {
                    var _this = this;

                    return this.recipeList.filter(function(recipe) {
                        return recipe.title.toLowerCase().includes(_this.search.toLowerCase());
                    });
                }
            }
        });

        // On r√©affiche la liste
        $('#list').show();


    </script>

{% endblock %}
